BUFFERWIDTH	equ 80 ; used in blob add buffer
;BUFFERHEIGHT	equ 64 ; used in blob add buffer
BUFFERHEIGHT	equ 48 ; used in blob add buffer

BUFROWS	equ 8  ; floyd steinberg dither size
BUFCOLS	equ 8  ; floyd steinberg dither size



WRVDP	MACRO	@WAARDE,@POORT
	; {{{
	LD	A,@WAARDE
	OUT	(#99),A
	LD	A,128+@POORT
	OUT	(#99),A
	ENDM
	; }}}

chkvdp2	macro
	; {{{
	LOCAL chkvdp2@sym
chkvdp2@sym
	in	a,(#99)
	rrca
	jp	c,chkvdp2@sym
	endm
	; }}}

DEBUG equ 1

debugdeviceascii macro @TEXTVAL
	; {{{
	if DEBUG
	LOCAL _debugdevicetmp
	LOCAL _debugdevicetmp2
	jr _debugdevicetmp2
_debugdevicetmp 
	db @TEXTVAL
_debugdevicetmp2
	ld a,0x23
	out (0x2e),a
	ld hl,_debugdevicetmp
	ld c,0x2f
	ld b,_debugdevicetmp2-_debugdevicetmp
	otir
	ld a,0x23
	out (0x2e),a
	endif
	endm
	; }}}

divhlby16	macro
	LOCAL _divhlby16
	; {{{
	; divide hl by 16 and place the lowerbyte value in l
	; the high part will be ignored
	; corrected if hl is negative so that a fraction like
	; -0.25 will become 0 and not -1 in twocomplement
	add hl,hl
	add hl,hl
	add hl,hl
	add hl,hl
	ld l,h
	ld a,128
	and l
	jr z,_divhlby16
	inc l
_divhlby16
	endm
	; }}}
;START	EQU	#C000
START	EQU	#100

; header is created by pasmo  and the --msx switch, the org command should be the first one seen by pasmo
;	db	254
;	dw	START,einde,START
	org	START

	di
	;set up screen0 width 80
	wrvdp 0,17
	ld hl,screen0regs
	ld bc,#9b+256*10
	otir
	; set up write #4096
	;no commands so no chkvdp2
	wrvdp 0,45
	wrvdp 0,14
	xor a
	out (#99),a
	ld a,64+#10
	out (#99),a
	xor a
	ld b,a
emptychars:
	out (#98),a
	out (#98),a
	out (#98),a
	out (#98),a
	out (#98),a
	out (#98),a
	out (#98),a
	out (#98),a
	djnz emptychars

	; fill screen with 0 chars
	;clear buffer first time
	ld hl,#8000
	ld de,#8001
	ld bc,BUFFERHEIGHT*256-1
	xor a
	ld (hl),a
	ldir
	call translatebuf2char

	di
	; set up write #4096+8*10 (only visible cahrs starting at chr$(10))
	;no commands so no chkvdp2
	wrvdp 0,45
	wrvdp 0,14
	ld a,10*8
	out (#99),a
	ld a,64+#10
	out (#99),a

	; now build the chars
	ld b,31
buildchars:	push bc
	ld a,32
	sub b
	add a,a
	add a,a
	add a,a
;	call chartovram ; old 2x4 pixelblocks
	call fillbuffer
	call dither
	call buffertochar
	call chartovram
	pop bc
	djnz buildchars

	ld b,31
buildchars2:	push bc
	ld a,b
	add a,a
	add a,a
	add a,a
;	call chartovram ; old 2x4 pixelblocks
	call fillbuffer
	call dither
	call buffertochar
	call chartovram
	pop bc
	djnz buildchars2

	ei
	ld a,#58	; openmsx debugdevice
	out (#2e),a	; set mode
mainloop:
	di
	if DEBUG
	ld a,"1"	; out '1' and timestamp!!
	out (#2f),a
	endif
	call clearblobs
	call moveblobs
	call addblobs
	call translatebuf2char
	if DEBUG
	ld a,"2"
	out (#2f),a
	; switch between best and worst 'static' cases
	ld a,(mainloopcnt)
	inc a
	ld (mainloopcnt),a
	jr nz,mainloop
	ld hl,(mainlooppnt)
	ld de,blobinfoworst XOR blobinfobest
	ld a,l
	xor e
	ld l,a
	ld a,h
	xor d
	ld h,a
	ld de,blobinfo+1
	ld (mainlooppnt),hl
	ld bc,4*4
	ldir
	endif
	ei
mainloopbreak:
	jr mainloop
	ret

	if DEBUG
mainloopcnt db 0
mainlooppnt dw blobinfoworst
	endif

screen0regs:	db #04,#70,#03,#27,#02,#36,#07,#f4
	db #08,#00

translatebuf2char: ; {{{ screen 0, averaging two rows, clipping code is ommitted by filling the chars with the correct patterns :-)
	di
	xor a
	out (#99),a
	ld a,64+#00
	out (#99),a
	ld hl,#8000
	ld c,#98
	ld b,24
translatebuf2char2:
	push bc
	ld b,40
translatebuf2char3:
	ld a,(hl)
	inc h
	add a,(hl)
	rra
	out(c),a

	inc l
	ld a,(hl)
	dec h
	add a,(hl)
	rra
	out(c),a

	inc l
	djnz translatebuf2char3 ;first 80 bytes
	ld l,0
	inc h
	inc h
	pop bc
	djnz translatebuf2char2
	ret
	; }}}

fillbuffer:	ld hl,buffer
	ld d,h
	ld e,l
	inc de
	ld bc,0+(BUFROWS+1)*(2+BUFCOLS)-1
	ld (hl),a
	ldir
	ret

dither:	; perform floyd steinbergh over the buffer, the buffer has an extra column at the left and right and an extra row to allow the error distribution code to be simpler
	ld ix,buffer+1
	ld b,BUFROWS
dither1:
	push bc
	ld b,BUFCOLS
dither2:
	push bc
	call dithercalc
	inc ix
	pop bc
	djnz dither2
	inc ix
	inc ix
	pop bc
	djnz dither1
	ret

dithercalc	; code that checks if value exceeds thresshold, adjusts the value and disperse the error over the other pixels in the buffer
	ld a,(ix+0)
	ld l,a	; store value in bc
	ld h,0
	cp 128
	jr nc,dithercalc1 ; value >= 128
	xor a
	jr dithercalc2
dithercalc1
	ld a,255
dithercalc2
	; now a is the new value
	ld (ix+0),a
	; now calculate the difference between new and old value and distribute the error
	ld c,a
	xor a ; resets the C-flag at the same time
	ld b,a
	sbc hl,bc ; hl=old-new
	; now distribute 1/16 of  the error to bottom right neighbour
	push hl
	divhlby16
	ld a,(ix+1+BUFCOLS+2)
	add a,l
	ld (ix+1+BUFCOLS+2),a
	pop hl
	; now distribute 3/16 of  the error to bottom left neighbour
	push hl
	ld b,h
	ld c,l
	add hl,hl
	add hl,bc
	divhlby16
	ld a,(ix+BUFCOLS+2-1)
	add a,l
	ld (ix+BUFCOLS+2-1),a
	pop hl
	; now distribute 5/16 of  the error to bottom neighbour
	push hl
	ld b,h
	ld c,l
	add hl,hl
	add hl,hl
	add hl,bc
	divhlby16
	ld a,(ix+BUFCOLS+2)
	add a,l
	ld (ix+BUFCOLS+2),a
	pop hl
	; now distribute 7/16 of  the error to right neighbour
	;push hl
	ld b,h
	ld c,l
	add hl,hl
	ld d,h
	ld e,l
	add hl,hl
	add hl,de
	add hl,bc
	divhlby16
	ld a,(ix+1)
	add a,l
	ld (ix+1),a
	;pop hl
	; Done with the error distribution
	ret

buffertochar:
	ld de,chardef
	ld hl,buffer+1
	ld b,8
buffertochar2:
	push bc
	ld bc,8*256
	xor a
buffertochar4:
	ld a,(hl)
	inc hl
	add a,a ; bit 7 to carry
	rl c ; carry into bit 0
	djnz buffertochar4
	ld a,c
	inc hl
	inc hl
	ld (de),a
	inc de
	pop bc
	djnz buffertochar2
	ret

chartovram:	; copy chardef to vram addr 4096+32*8 (=#1100)
	ld bc,#98+8*256
	ld hl,chardef
	otir
	ret


clearblobs:	; {{{ Code to clear the blobs clip array
	; shorter version
	ld hl,#8000
	ld de,#8001
	ld b,BUFFERHEIGHT
clearblobs0:	push bc
	xor a
	ld (hl),a
	ld bc,80
	ldir
	pop bc
	inc h
	ld d,h
	ld l,0
	ld e,1
	djnz clearblobs0
	ret
	; end shorter version

	ld hl,blobinfo
	ld b,(hl)
	inc hl
clearblobs1:	push bc
	ld d,(hl)
	inc hl
	ld e,(hl)
	inc hl
	inc hl
	inc hl
	push hl
	call cliptorect
	call clearblobs2
	pop hl
	pop bc
	djnz clearblobs1
	ret

clearblobs2:	; zero out the info within the clipregion
	; determine start adres
	ld a,(clipdx)
	ld l,a
	ld a,(clipdy)
	or 128
	ld h,a
	ld a,(clipdh)
	ld b,a
clearblobs3:
	push hl
	push bc
	ld a,(clipdw)
	ld c,a
	ld e,l
	ld d,h
	inc e
	xor a
	ld b,a
	ld (hl),a
	ldir
	pop bc
	pop hl
	inc h
	djnz clearblobs3
	ret
	; }}}

addblobs:	; {{{ Code to add the blobs to the global buffer
	ld hl,blobinfo
	ld b,(hl)
	inc hl
addblobs1:	push bc
	ld d,(hl)
	inc hl
	ld e,(hl)
	inc hl
	inc hl
	inc hl
	push hl
	call cliptorect
	call addblobs2
	pop hl
	pop bc
	djnz addblobs1
	ret

addblobs2:	; add the info within the clipregion
	; determine start of source addres
	ld a,(clipsy)
	add a,a
	ld e,a
	ld a,(clipsx)
	ld d,a
	exx

	; determine start adres in destination buffer
	ld a,(clipdx)
	ld l,a
	ld a,(clipdy)
	or 128
	ld h,a
	ld a,(clipdh)
	ld b,a
addblobs3:
	push bc
	push hl
	ex de,hl

	ld h,blobdatapointers/256
	exx
	ld a,e
	inc e
	inc e
	exx
	ld l,a
	ld a,(hl)
	inc l
	ld h,(hl)
	ld l,a

	ld a,(clipsx)
	ld c,a
	ld a,(hl)	; a =offset of circle section on this row
	inc hl
	ld b,(hl)	;b = length of circle section on this row
	inc hl
	sub c
	jp nc,addblobsoff ; offset >= clipsx
	; here offset smaller then clipsx
	neg	; a = clipsx-offset
	ld c,a
	ld a,b ; a = length of circle section on this row
	ld b,0
	add hl,bc ; hl=skip diff clipsx-offset
	sub c ; a = length section - (clipsx-offset)
	ex de,hl
	ld b,a
	ld a,(clipdw)
	cp b
	jp nc,addblobs4
	ld b,a
	jp addblobs4

addblobsoff:	; here offset bigger then clipsx
	ld c,a
	ld a,b ; a = length of circle section on this row
	ld b,0
	ex de,hl
	add hl,bc ; hl=skip diff clipsx-offset
	ld b,a
	ld a,(clipdw)
	sub c
	;now check if circelsection < adjusted clipdw
	cp b
	jp nc,addblobs4
	ld b,a

	; now b is clipdw adjusted with offset
addblobs4:	; now jump  into the unrolled loop
	;ld a,(de)
	;add a,(hl)
	;ld (hl),a
	;inc de
	;inc l
	; we calculate entry point without altering hl,de,bc, and de'
	ld a,b
	exx
	ld hl,addblobs42
	push hl ; return point for unrolled loop
	ld l,a
	add a,a ; *2
	add a,a ; *4
	ld c,a
	xor a
	ld h,a
	ld b,a
	add hl,bc
	ld b,h
	ld c,l
	ld hl,endunrolled
	or a
	sbc hl,bc
	push hl
	exx
	ret
addblobs42:
	; is now unrolled ; djnz addblobs4
	pop hl
	pop bc
	inc h ; clipdy++
	djnz addblobs3
	ret
	; }}}

	;{{{ unrolled loop here
	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	;}}}
endunrolled:	ret


moveblobs:	; {{{ Code to clear the blobs clip array
	ld hl,blobinfo
	ld b,(hl)
	inc hl
moveblobs2:	push bc
	ld d,(hl)
	inc hl
	ld e,(hl)
	inc hl
	ld b,(hl)
	inc hl
	ld c,(hl)
	push hl	; we do this hl trickery in case we want to use hl in moveblocks3
	dec hl
	dec hl
	dec hl
	call moveblobs3
	pop hl
	inc hl
	pop bc
	djnz moveblobs2
	ret

moveblobs3:
	ld a,d
	add a,b
	ld d,a
	cp BUFFERWIDTH
	jr c,moveblobs4
	; went from 0 to a neg number
	; or to the right over the border
	ld a,b
	neg
	ld b,a
	ld a,d
	add a,b
	add a,b
	ld d,a
moveblobs4:	
	; now the y
	ld a,e
	add a,c
	ld e,a
	cp BUFFERHEIGHT ; , that one is bigger then 2*screen
	jr c,moveblobs5
	; went from 0 to neg or over the max y
	ld a,c
	neg
	ld c,a
	ld a,e
	add a,c
	add a,c
	ld e,a
moveblobs5	;save the values again
	ld (hl),d
	inc hl
	ld (hl),e
	inc hl
	ld (hl),b
	inc hl
	ld (hl),c
	ret
	; }}}

;chartovram:	; {{{ create a char with the bits building up 3x2 pixel blocks
;	; so that we have a char pattern of
;	; 777666xx
;	; 777666xx
;	; 555444xx
;	; 555444xx
;	; 333222xx
;	; 333222xx
;	; 111000xx
;	; 111000xx
;	; each bit in A turns on the respective pixels
;	ld c,a
;	call chartovramdef ; bit 7 & 6
;	out (#98),a
;	out (#98),a
;	rl c
;	rl c
;	ld a,c
;	call chartovramdef ; bit 5 & 4
;	out (#98),a
;	out (#98),a
;	rl c
;	rl c
;	ld a,c
;	call chartovramdef ; bit 3 & 2
;	out (#98),a
;	out (#98),a
;	rl c
;	rl c
;	ld a,c
;	call chartovramdef ; bit 1 & 0
;	out (#98),a
;	out (#98),a
;	ret
;chartovramdef:	; {{{ use bit 7&6 to determine which pattern to push into the charpattern
;	; IN: A
;	; OUT: A
;	; CHANGES: AF
;	rlca
;	jr nc,chartovramdef4
;	; high pixel set
;	rlca
;	jr nc,chartovramdef2
;	ld a,#fa
;	ret
;chartovramdef2:	ld a,#e0
;	ret
;	; high pixel not set
;chartovramdef4: rlca
;	jr c,chartovramdef6
;	xor a
;	ret
;chartovramdef6:	ld a,#1c
;	ret
;	;}}}
;	; }}}

cliptorect:	; {{{ from center of circle (d=64) determine box to fill
	; we clip against a box of (0,0)-(BUFFERWIDTH,BUFFERHEIGHT)
	; IN: D=x center, E=y center
	; OUT: clipdx,clipdy,clipsx,clipsy,clipdw,clipdh
	; CHANGES: AF,DE,HL,BC
	ld a,d
	sub 32
	jr nc,cliptorect1
	; We are in the left border so we need to clip
	ld c,a
	neg
	ld (clipsx),a
	ld a,64
	add a,c
	ld (clipdw),a
	xor a
	ld (clipdx),a
	jr cliptorect3
cliptorect1:	; We are not touching the left border
	ld (clipdx),a
	; maybe we are touching the right border ?
	add a,64 ; no need to check for >255 since x always <= BUFFERWIDTH
	sub BUFFERWIDTH
	jr c,cliptorect2
	; we are in the right border 
	neg
	add a,64
	jr cliptorect21
cliptorect2:	; we are not in the right border
	ld a,64
cliptorect21:
	ld (clipdw),a
	xor a
	ld (clipsx),a
cliptorect3:	; now check the y coordinates

	; same logic as checking the x-axis
	ld a,e
	sub 32
	jr nc,cliptorect4
	; We are in the upper border so we need to clip
	ld c,a
	neg
	ld (clipsy),a
	ld a,64
	add a,c
	ld (clipdh),a
	xor a
	ld (clipdy),a
	ret
cliptorect4:	; We are not touching the upper border
	ld (clipdy),a
	; maybe we are touching the lower border ?
	add a,64 ; no need to check for >255 since x always <= BUFFERHEIGHT
	sub BUFFERHEIGHT
	jr c,cliptorect5
	; we are in the bottom border 
	neg
	add a,64
	jr cliptorect51
cliptorect5:	; we are not in the bottom border
	ld a,64
cliptorect51:
	ld (clipdh),a
	xor a
	ld (clipsy),a
	ret


	; }}}

clipdx 	db 0	; the destination x of the box
clipdy	db 0 	; the destination y of the box
clipdw	db 0	; the width of the box
clipdh	db 0	; the width of the destination of the box
clipsx	db 0	; the source x in the origin box around the center
clipsy 	db 0	; the source y in the origin box around the center

blobinfo:	db 4 ; now testing so not all 6 ; nr of blobs
;	db 12,15,0,1 ; x,y,speedx,speedy
;	db 23,4,1,0 ; x,y,speedx,speedy
	db 54,14,-1,1 ; x,y,speedx,speedy
	db 60,15,-1,-1 ; x,y,speedx,speedy
	db 12,5,1,1 ; x,y,speedx,speedy
	db 35,4,1,-1 ; x,y,speedx,speedy


	if DEBUG
blobinfobest:
	db 79,47,0,0 ; x,y,speedx,speedy
	db 0,47,0,0 ; x,y,speedx,speedy
	db 0,0,0,0 ; x,y,speedx,speedy
	db 79,0,0,0 ; x,y,speedx,speedy
blobinfoworst:
	db 40,24,0,0 ; x,y,speedx,speedy
	db 40,24,0,0 ; x,y,speedx,speedy
	db 40,24,0,0 ; x,y,speedx,speedy
	db 40,24,0,0 ; x,y,speedx,speedy
	endif

blobsource
	; {{{
blobdata0: db  26 , 11   , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 
blobdata1: db  22 , 19   , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 , 1 
blobdata2: db  19 , 25   , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 2 , 2 , 2 , 2 , 1 , 1 , 1 
blobdata3: db  17 , 29   , 1 , 1 , 1 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 3 , 3 , 3 , 3 , 2 , 2 , 1 , 1 , 1 
blobdata4: db  15 , 33   , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 2 , 1 , 1 
blobdata5: db  14 , 35   , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 1 , 1 
blobdata6: db  13 , 37   , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 2 , 1 
blobdata7: db  11 , 41   , 1 , 1 , 2 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 2 , 1 , 1 
blobdata8: db  10 , 43   , 1 , 1 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata9: db  9 , 45   , 1 , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata10: db  8 , 47   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata11: db  7 , 49   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata12: db  7 , 49   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata13: db  6 , 51   , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 
blobdata14: db  5 , 53   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata15: db  4 , 55   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 14 , 14 , 14 , 14 , 14 , 14 , 14 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata16: db  4 , 55   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 12 , 12 , 14 , 14 , 14 , 16 , 16 , 16 , 16 , 16 , 16 , 16 , 14 , 14 , 14 , 12 , 12 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata17: db  3 , 57   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 14 , 16 , 16 , 16 , 17 , 17 , 17 , 17 , 17 , 17 , 17 , 16 , 16 , 16 , 14 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata18: db  3 , 57   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 16 , 17 , 17 , 17 , 19 , 19 , 19 , 19 , 19 , 19 , 19 , 17 , 17 , 17 , 16 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata19: db  2 , 59   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 16 , 17 , 19 , 19 , 19 , 21 , 21 , 21 , 21 , 21 , 21 , 21 , 19 , 19 , 19 , 17 , 16 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata20: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 17 , 17 , 19 , 19 , 21 , 21 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 21 , 21 , 19 , 19 , 17 , 17 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata21: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 23 , 24 , 24 , 24 , 24 , 24 , 24 , 24 , 23 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata22: db  1 , 61   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 24 , 24 , 24 , 26 , 26 , 26 , 26 , 26 , 24 , 24 , 24 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata23: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 16 , 17 , 19 , 21 , 23 , 23 , 24 , 24 , 26 , 26 , 27 , 27 , 27 , 27 , 27 , 26 , 26 , 24 , 24 , 23 , 23 , 21 , 19 , 17 , 16 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata24: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 21 , 23 , 24 , 26 , 26 , 27 , 27 , 28 , 28 , 28 , 28 , 28 , 27 , 27 , 26 , 26 , 24 , 23 , 21 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata25: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 19 , 21 , 23 , 24 , 26 , 26 , 27 , 28 , 28 , 29 , 29 , 29 , 29 , 29 , 28 , 28 , 27 , 26 , 26 , 24 , 23 , 21 , 19 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata26: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 30 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata27: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata28: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata29: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata30: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata31: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata32: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata33: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata34: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata35: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata36: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata37: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 30 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata38: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 19 , 21 , 23 , 24 , 26 , 26 , 27 , 28 , 28 , 29 , 29 , 29 , 29 , 29 , 28 , 28 , 27 , 26 , 26 , 24 , 23 , 21 , 19 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata39: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 21 , 23 , 24 , 26 , 26 , 27 , 27 , 28 , 28 , 28 , 28 , 28 , 27 , 27 , 26 , 26 , 24 , 23 , 21 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata40: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 16 , 17 , 19 , 21 , 23 , 23 , 24 , 24 , 26 , 26 , 27 , 27 , 27 , 27 , 27 , 26 , 26 , 24 , 24 , 23 , 23 , 21 , 19 , 17 , 16 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata41: db  1 , 61   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 24 , 24 , 24 , 26 , 26 , 26 , 26 , 26 , 24 , 24 , 24 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata42: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 23 , 24 , 24 , 24 , 24 , 24 , 24 , 24 , 23 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata43: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 17 , 17 , 19 , 19 , 21 , 21 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 21 , 21 , 19 , 19 , 17 , 17 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata44: db  2 , 59   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 16 , 17 , 19 , 19 , 19 , 21 , 21 , 21 , 21 , 21 , 21 , 21 , 19 , 19 , 19 , 17 , 16 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata45: db  3 , 57   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 16 , 17 , 17 , 17 , 19 , 19 , 19 , 19 , 19 , 19 , 19 , 17 , 17 , 17 , 16 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata46: db  3 , 57   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 14 , 16 , 16 , 16 , 17 , 17 , 17 , 17 , 17 , 17 , 17 , 16 , 16 , 16 , 14 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata47: db  4 , 55   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 12 , 12 , 14 , 14 , 14 , 16 , 16 , 16 , 16 , 16 , 16 , 16 , 14 , 14 , 14 , 12 , 12 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata48: db  4 , 55   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 14 , 14 , 14 , 14 , 14 , 14 , 14 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata49: db  5 , 53   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata50: db  6 , 51   , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 
blobdata51: db  7 , 49   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata52: db  7 , 49   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata53: db  8 , 47   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata54: db  9 , 45   , 1 , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata55: db  10 , 43   , 1 , 1 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata56: db  11 , 41   , 1 , 1 , 2 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 2 , 1 , 1 
blobdata57: db  13 , 37   , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 2 , 1 
blobdata58: db  14 , 35   , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 1 , 1 
blobdata59: db  15 , 33   , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 2 , 1 , 1 
blobdata60: db  17 , 29   , 1 , 1 , 1 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 3 , 3 , 3 , 3 , 2 , 2 , 1 , 1 , 1 
blobdata61: db  19 , 25   , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 2 , 2 , 2 , 2 , 1 , 1 , 1 
blobdata62: db  22 , 19   , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 , 1 
blobdata63: db  26 , 11   , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 
 ; }}}
blobsourceend

	ds ((($/256)+1)*256)-$
blobdatapointers:
	dw blobdata0,blobdata1,blobdata2,blobdata3
	dw blobdata4,blobdata5,blobdata6,blobdata7
	dw blobdata8,blobdata9,blobdata10,blobdata11
	dw blobdata12,blobdata13,blobdata14,blobdata15
	dw blobdata16,blobdata17,blobdata18,blobdata19
	dw blobdata20,blobdata21,blobdata22,blobdata23
	dw blobdata24,blobdata25,blobdata26,blobdata27
	dw blobdata28,blobdata29,blobdata30,blobdata31
	dw blobdata32,blobdata33,blobdata34,blobdata35
	dw blobdata36,blobdata37,blobdata38,blobdata39
	dw blobdata40,blobdata41,blobdata42,blobdata43
	dw blobdata44,blobdata45,blobdata46,blobdata47
	dw blobdata48,blobdata49,blobdata50,blobdata51
	dw blobdata52,blobdata53,blobdata54,blobdata55
	dw blobdata56,blobdata57,blobdata58,blobdata59
	dw blobdata60,blobdata61,blobdata62,blobdata63

buffer ds 64*64	; used for floyd steinbergh 
chardef ds 8
einde	equ $

;	vim:foldmethod=marker:ft=z8a:ts=16
