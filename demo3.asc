BUFFERWIDTH	equ 80 ; used in blob add buffer
BUFFERHEIGHT	equ 48 ; used in blob add buffer

BUFROWS	equ 8  ; floyd steinberg dither size
BUFCOLS	equ 8  ; floyd steinberg dither size



WRVDP	MACRO	@WAARDE,@POORT
	; {{{
	LD	A,@WAARDE
	OUT	(#99),A
	LD	A,128+@POORT
	OUT	(#99),A
	ENDM
	; }}}

chkvdp2	macro
	; {{{
	LOCAL chkvdp2@sym
chkvdp2@sym
	in	a,(#99)
	rrca
	jp	c,chkvdp2@sym
	endm
	; }}}

DEBUG equ 1
DEBUG2 equ 0

debugdeviceascii macro @TEXTVAL
	; {{{
	if DEBUG
	LOCAL _debugdevicetmp
	LOCAL _debugdevicetmp2
	jr _debugdevicetmp2
_debugdevicetmp 
	db @TEXTVAL
_debugdevicetmp2
	ld a,0x23
	out (0x2e),a
	ld hl,_debugdevicetmp
	ld c,0x2f
	ld b,_debugdevicetmp2-_debugdevicetmp
	otir
	ld a,0x23
	out (0x2e),a
	endif
	endm
	; }}}

divhlby16	macro
	LOCAL _divhlby16
	; {{{
	; divide hl by 16 and place the lowerbyte value in l
	; the high part will be ignored
	; corrected if hl is negative so that a fraction like
	; -0.25 will become 0 and not -1 in twocomplement
	add hl,hl
	add hl,hl
	add hl,hl
	add hl,hl
	ld l,h
	ld a,128
	and l
	jr z,_divhlby16
	inc l
_divhlby16
	endm
	; }}}
;START	EQU	#C000
START	EQU	#100

; header is created by pasmo  and the --msx switch, the org command should be the first one seen by pasmo
;	db	254
;	dw	START,einde,START
	org	START

	di
	;set up screen0 width 80
	wrvdp 0,17
	ld hl,screen0regs
	ld bc,#9b+256*10
	otir
	wrvdp 16*4+4,7 ; blue on blue normal
	wrvdp 16*4+4,12 ; blue on blue blink
	wrvdp 16*15+0,13 ; on/off time blink

mainloop:

startplasma:	; {{{
	ld hl,5*180 ; +/- 5FPS
	ld (countdown),hl

	call setupplasma
	ld hl,cptext
	ld (inserttextpoint),hl
	ei
	ld a,#58	; openmsx debugdevice
	out (#2e),a	; set mode
plasmaloop:
	di
	if DEBUG
	ld a,"1"	; out '1' and timestamp!!
	out (#2f),a
	endif
	call clearblobs
	call moveblobs
	call addblobs
	call inserttext
	call translatebuf2char

	call scrollcolchar
	call transferbuf2col
	call swappage

	if DEBUG
	ld a,"2"
	out (#2f),a
	endif
	if DEBUG2
	; switch between best and worst 'static' cases
	ld a,(plasmaloopcnt)
	inc a
	ld (plasmaloopcnt),a
	jr nz,plasmaloop
	ld hl,(mainlooppnt)
	ld de,blobinfoworst XOR blobinfobest
	ld a,l
	xor e
	ld l,a
	ld a,h
	xor d
	ld h,a
	ld de,blobinfo+1
	ld (mainlooppnt),hl
	ld bc,4*4
	ldir
	endif
	ei
mainloopbreak:
	ld hl,(countdown)
	dec hl
	ld (countdown),hl
	ld a,h
	or l
	jr nz,plasmaloop
	;}}}

startfire:	; {{{
	call setupfire
	ld hl,firetext
	ld (inserttextpoint),hl
	ld hl,15*30 ; +/- 15 FPS
	ld (countdown),hl
aaaaaa:
	call calculatefire
	call inserttext
	call calculatefirecol
	call transferbuf2col
	call transferbuf2char
	ei
	halt
	call swappage
	ld hl,(countdown)
	dec hl
	ld (countdown),hl
	ld a,h
	or l
	jp nz,aaaaaa
	;}}}

	jp mainloop


	if DEBUG2
plasmaloopcnt db 0
mainlooppnt dw blobinfoworst
	endif

screen0regs:	db #04,#70,#03,#27,#02,#36,#07,#f4
	db #08,#00
countdown:	dw 0

clearbuffers:
	ld hl,#8000-10*24
	ld de,#8001-10*24
	ld bc,10*24+BUFFERHEIGHT*256-1
	xor a
	ld (hl),a
	ldir
	ret

makeemptychars:
	; set up write #4096
	;no commands so no chkvdp2
	di
	wrvdp 0,45
	wrvdp 0,14
	xor a
	out (#99),a
	ld a,64+#10
	out (#99),a
	xor a
	ld b,256-((fontdataend - fontdata)/8)
emptychars:
	out (#98),a
	nop
	out (#98),a
	nop
	out (#98),a
	nop
	out (#98),a
	nop
	out (#98),a
	nop
	out (#98),a
	nop
	out (#98),a
	nop
	out (#98),a
	nop
	djnz emptychars
	ld hl,fontdata
	ld bc,#98+256*240 ; total 8*62chars = 240+256bytes
	otir
	otir
	ret

setupfire:
	call makeemptychars
	call clearbuffers
	call transferbuf2col
	call translatebuf2char
	call swappage
	wrvdp 16*10+0,7 ; yellow on black normal
	wrvdp 16*8+10,12 ; red on yellow blink
	wrvdp 16*15+0,13 ; on/off time blink
	; set up write #4096+8*96 (only visible cahrs starting at chr$(10))
	;no commands so no chkvdp2
	wrvdp 0,45
	wrvdp 0,14
	ld a,0
	out (#99),a
	ld a,64+#13
	out (#99),a

	; now build the chars
	ld b,2
firebuildchrs1:	push bc
	ld b,32
firebuildchrs2:	push bc
	ld a,33
	sub b
	add a,a
	add a,a
	add a,a
	dec a
	call fillbuffer
	call dither
	call buffertochar
	call chartovram
	pop bc
	djnz firebuildchrs2
	pop bc
	djnz firebuildchrs1
	;now fill some extra with '255' chars
	ld b,22
firebuildchrs3:	push bc
	call chartovram
	pop bc
	djnz firebuildchrs3
	ret

calculatefirecol:
	ld de,#8000-24*10
	ld hl,#8000
	ld b,24
calculatefirecol1:
	push bc
	ld b,10
calculatefirecol2:
	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,(hl)
	inc l
	add a,a
	rl c

	ld a,c
	ld (de),a
	inc de

	djnz calculatefirecol2
	ld l,0
	inc h
	pop bc
	djnz calculatefirecol1
	ret

calculatefire:
	; first insert some extra cold in the lines above
	ld hl,#8000+16*256
	call random
	and 3
	add a,h
	ld h,a
	ld b,5
calculatefire0:
	call random
	and 63
	add a,8
	ld l,a
	ld a,(hl)
	cp 20
	jr c,calculatefire01
	sub 20
	ld (hl),a
calculatefire01:
	djnz calculatefire0
	; then fill bottom with random values
	; first base heat
	ld hl,#8000+23*256
	ld de,#8001+23*256
	ld bc,80
	call random
	and 63
	add a,101
	ld (hl),a
	ldir
	; now random spots
	ld hl,#8000+23*256
	call random
	and 3
	add a,2
	ld b,a
calculatefire1:	call random
	and 63
	add a,8
	ld l,a
	call random
	and 127
	or 128
	ld (hl),a
	inc hl
	djnz calculatefire1
	; now move up and decrease value
	ld b,22
calculatefire2:
	push bc
	ld d,h
	dec h
	xor a
	ld l,a
	ld e,a
	push de
	pop ix
	; first a special case for the first point
	ld a,(hl)
	add a,(ix+1)
	rra
	ld e,a
	ld a,(ix+0)
	add a,e
	rra
	dec a
	dec a
	dec a
	dec a
	ld (hl),a
	;now loop for 80-2 time
	ld b,78
calculatefire3:
	inc l
	inc ix
	ld a,(hl)
	add a,(ix-1)
	rra
	ld e,a
	ld a,(ix+0)
	add a,(ix+1)
	rra
	add a,e
	rra
	dec a
	ld (hl),a
	djnz calculatefire3
	; special case for last point
	inc l
	inc ix
	ld a,(hl)
	add a,(ix-1)
	rra
	ld e,a
	ld a,(ix+0)
	add a,e
	rra
	dec a
	dec a
	dec a
	dec a
	ld (hl),a

	pop bc
	djnz calculatefire2
	ret


setupplasma:
	call makeemptychars
	call clearbuffers
	call transferbuf2col
	call translatebuf2char
	call swappage
	ld a,1
	ld (scrollcolcharcnt),a
	ld hl,scrolltxt
	ld (scrollcolchartxtpnt),hl
	di
	wrvdp 16*15+4,7 ; white on blue normal
	wrvdp 16*1+4,12 ; black on blue blink
	wrvdp 16*15+0,13 ; on/off time blink
	; set up write #4096+8*10 (only visible cahrs starting at chr$(10))
	;no commands so no chkvdp2
	wrvdp 0,45
	wrvdp 0,14
	ld a,10*8
	out (#99),a
	ld a,64+#10
	out (#99),a

	; now build the chars
	ld b,31
buildchars:	push bc
	ld a,32
	sub b
	add a,a
	add a,a
	add a,a
;	call chartovram ; old 2x4 pixelblocks
	call fillbuffer
	call dither
	call buffertochar
	call chartovram
	pop bc
	djnz buildchars

	ld b,31
buildchars2:	push bc
	ld a,b
	add a,a
	add a,a
	add a,a
;	call chartovram ; old 2x4 pixelblocks
	call fillbuffer
	call dither
	call buffertochar
	call chartovram
	pop bc
	djnz buildchars2
	ret

inserttext:
	ld hl,(inserttextpoint)
	ld a,h
	or l
	ret z
	ld e,(hl)
	inc hl
	ld d,(hl)
inserttext2:
	inc hl
	ld c,(hl)
	inc hl
	ld b,0
	ldir
	ld e,(hl)
	inc hl
	ld d,(hl)
	ld a,e
	or d
	ret z
	jp inserttext2
	ret
inserttextpoint: dw cptext

translatebuf2char: ; {{{ screen 0, averaging two rows, clipping code is ommitted by filling the chars with the correct patterns :-)
	di
	xor a
	out (#99),a
	ld a,(pageaddr)
	or 64+#00
	out (#99),a
	ld hl,#8000
	ld c,#98
	ld b,24
translatebuf2char2:
	push bc
	ld b,40
translatebuf2char3:
	ld a,(hl)
	inc h
	add a,(hl)
	rra
	out(c),a

	inc l
	ld a,(hl)
	dec h
	add a,(hl)
	rra
	out(c),a

	inc l
	djnz translatebuf2char3 ;first 80 bytes
	ld l,0
	inc h
	inc h
	pop bc
	djnz translatebuf2char2
	ret
	; }}}

transferbuf2char: ; {{{ screen 0, simply move #8yxx per 80 chars to screen
	di
	xor a
	out (#99),a
	ld a,(pageaddr)
	or 64+#00
	out (#99),a
	ld hl,#8000
	ld c,#98
	ld b,24
transferbuf2char2:
	push bc
	ld b,80
	otir
	ld l,0
	inc h
	pop bc
	djnz transferbuf2char2
	ret
	; }}}

transferbuf2col: ; {{{ screen 0, simply move #8000-8*24 to colorpattern at vram #0800
	di
	xor a
	out (#99),a
	ld a,(pageaddr)
	or 64+#08
	out (#99),a
	ld hl,#8000-10*24
	ld c,#98
	ld b,24*10
	otir
	ret
	; }}}

pageaddr:	db #20
swappage:	ld a,(pageaddr)
	xor #20
	ld (pageaddr),a
	di 
	jp nz,swappage2
	;now will write to range #0000 - #1000 for cols and patterns
	; char defs stay at #1000
	; so display #2000.....
	wrvdp #0b,2
	wrvdp #A7,3
	ret
swappage2:
	; display layouttable at 0x0000, colortable at 0x0800
	wrvdp #03,2
	wrvdp #27,3
	ret

fillbuffer:	ld hl,buffer
	ld d,h
	ld e,l
	inc de
	ld bc,0+(BUFROWS+1)*(2+BUFCOLS)-1
	ld (hl),a
	ldir
	ret

dither:	; perform floyd steinbergh over the buffer, the buffer has an extra column at the left and right and an extra row to allow the error distribution code to be simpler
	ld ix,buffer+1
	ld b,BUFROWS
dither1:
	push bc
	ld b,BUFCOLS
dither2:
	push bc
	call dithercalc
	inc ix
	pop bc
	djnz dither2
	inc ix
	inc ix
	pop bc
	djnz dither1
	ret

dithercalc	; code that checks if value exceeds thresshold, adjusts the value and disperse the error over the other pixels in the buffer
	ld a,(ix+0)
	ld l,a	; store value in bc
	ld h,0
	cp 128
	jr nc,dithercalc1 ; value >= 128
	xor a
	jr dithercalc2
dithercalc1
	ld a,255
dithercalc2
	; now a is the new value
	ld (ix+0),a
	; now calculate the difference between new and old value and distribute the error
	ld c,a
	xor a ; resets the C-flag at the same time
	ld b,a
	sbc hl,bc ; hl=old-new
	; now distribute 1/16 of  the error to bottom right neighbour
	push hl
	divhlby16
	ld a,(ix+1+BUFCOLS+2)
	add a,l
	ld (ix+1+BUFCOLS+2),a
	pop hl
	; now distribute 3/16 of  the error to bottom left neighbour
	push hl
	ld b,h
	ld c,l
	add hl,hl
	add hl,bc
	divhlby16
	ld a,(ix+BUFCOLS+2-1)
	add a,l
	ld (ix+BUFCOLS+2-1),a
	pop hl
	; now distribute 5/16 of  the error to bottom neighbour
	push hl
	ld b,h
	ld c,l
	add hl,hl
	add hl,hl
	add hl,bc
	divhlby16
	ld a,(ix+BUFCOLS+2)
	add a,l
	ld (ix+BUFCOLS+2),a
	pop hl
	; now distribute 7/16 of  the error to right neighbour
	;push hl
	ld b,h
	ld c,l
	add hl,hl
	ld d,h
	ld e,l
	add hl,hl
	add hl,de
	add hl,bc
	divhlby16
	ld a,(ix+1)
	add a,l
	ld (ix+1),a
	;pop hl
	; Done with the error distribution
	ret

buffertochar:
	ld de,chardef
	ld hl,buffer+1
	ld b,8
buffertochar2:
	push bc
	ld bc,8*256
	xor a
buffertochar4:
	ld a,(hl)
	inc hl
	add a,a ; bit 7 to carry
	rl c ; carry into bit 0
	djnz buffertochar4
	ld a,c
	inc hl
	inc hl
	ld (de),a
	inc de
	pop bc
	djnz buffertochar2
	ret

chartovram:	; copy chardef to vram addr 4096+32*8 (=#1100)
	ld bc,#98+8*256
	ld hl,chardef
	otir
	ret

;routine voor random getallen
RANDOM:
; In A random getal 0-255
; verandert A
        PUSH    BC
        LD      A,R
        LD      C,A
        RRCA
        RRCA
        RRCA
        RRCA
        XOR     C
        AND     15
        LD      C,A
        LD      A,R
        LD      B,A
        RLCA
        RLCA
        RLCA
        RLCA
        XOR     B
        AND     240
        ADD     A,C
        PUSH    AF
        LD      A,(RNDGTL)
        RLCA
        LD      C,A
        POP     AF
        XOR     C
        LD      (RNDGTL),A
        POP     BC
        RET

RNDGTL: DEFB    0


clearblobs:	; {{{ Code to clear the blobs clip array
	; shorter version
	ld hl,#8000
	ld de,#8001
	ld b,BUFFERHEIGHT
clearblobs0:	push bc
	xor a
	ld (hl),a
	ld bc,80
	ldir
	pop bc
	inc h
	ld d,h
	ld l,0
	ld e,1
	djnz clearblobs0
	ret
	; end shorter version

	ld hl,blobinfo
	ld b,(hl)
	inc hl
clearblobs1:	push bc
	ld d,(hl)
	inc hl
	ld e,(hl)
	inc hl
	inc hl
	inc hl
	push hl
	call cliptorect
	call clearblobs2
	pop hl
	pop bc
	djnz clearblobs1
	ret

clearblobs2:	; zero out the info within the clipregion
	; determine start adres
	ld a,(clipdx)
	ld l,a
	ld a,(clipdy)
	or 128
	ld h,a
	ld a,(clipdh)
	ld b,a
clearblobs3:
	push hl
	push bc
	ld a,(clipdw)
	ld c,a
	ld e,l
	ld d,h
	inc e
	xor a
	ld b,a
	ld (hl),a
	ldir
	pop bc
	pop hl
	inc h
	djnz clearblobs3
	ret
	; }}}

addblobs:	; {{{ Code to add the blobs to the global buffer
	ld hl,blobinfo
	ld b,(hl)
	inc hl
addblobs1:	push bc
	ld d,(hl)
	inc hl
	ld e,(hl)
	inc hl
	inc hl
	inc hl
	push hl
	call cliptorect
	call addblobs2
	pop hl
	pop bc
	djnz addblobs1
	ret

addblobs2:	; add the info within the clipregion
	; determine start of source addres
	ld a,(clipsy)
	add a,a
	ld e,a
	ld a,(clipsx)
	ld d,a
	exx

	; determine start adres in destination buffer
	ld a,(clipdx)
	ld l,a
	ld a,(clipdy)
	or 128
	ld h,a
	ld a,(clipdh)
	ld b,a
addblobs3:
	push bc
	push hl
	ex de,hl

	ld h,blobdatapointers/256
	exx
	ld a,e
	inc e
	inc e
	exx
	ld l,a
	ld a,(hl)
	inc l
	ld h,(hl)
	ld l,a

	ld a,(clipsx)
	ld c,a
	ld a,(hl)	; a =offset of circle section on this row
	inc hl
	ld b,(hl)	;b = length of circle section on this row
	inc hl
	sub c
	jp nc,addblobsoff ; offset >= clipsx
	; here offset smaller then clipsx
	neg	; a = clipsx-offset
	ld c,a
	ld a,b ; a = length of circle section on this row
	ld b,0
	add hl,bc ; hl=skip diff clipsx-offset
	sub c ; a = length section - (clipsx-offset)
	ex de,hl
	ld b,a
	ld a,(clipdw)
	cp b
	jp nc,addblobs4
	ld b,a
	jp addblobs4

addblobsoff:	; here offset bigger then clipsx
	ld c,a
	ld a,b ; a = length of circle section on this row
	ld b,0
	ex de,hl
	add hl,bc ; hl=skip diff clipsx-offset
	ld b,a
	ld a,(clipdw)
	sub c
	;now check if circelsection < adjusted clipdw
	cp b
	jp nc,addblobs4
	ld b,a

	; now b is clipdw adjusted with offset
addblobs4:	; now jump  into the unrolled loop
	;ld a,(de)
	;add a,(hl)
	;ld (hl),a
	;inc de
	;inc l
	; we calculate entry point without altering hl,de,bc, and de'
	ld a,b
	exx
	ld hl,addblobs42
	push hl ; return point for unrolled loop
	ld l,a
	add a,a ; *2
	add a,a ; *4
	ld c,a
	xor a
	ld h,a
	ld b,a
	add hl,bc
	ld b,h
	ld c,l
	ld hl,endunrolled
	or a
	sbc hl,bc
	push hl
	exx
	ret
addblobs42:
	; is now unrolled ; djnz addblobs4
	pop hl
	pop bc
	inc h ; clipdy++
	djnz addblobs3
	ret
	; }}}

	;{{{ unrolled loop here
	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	ld a,(de)
	add a,(hl)
	ld (hl),a
	inc de
	inc l

	;}}}
endunrolled:	ret


moveblobs:	; {{{ Code to clear the blobs clip array
	ld hl,blobinfo
	ld b,(hl)
	inc hl
moveblobs2:	push bc
	ld d,(hl)
	inc hl
	ld e,(hl)
	inc hl
	ld b,(hl)
	inc hl
	ld c,(hl)
	push hl	; we do this hl trickery in case we want to use hl in moveblocks3
	dec hl
	dec hl
	dec hl
	call moveblobs3
	pop hl
	inc hl
	pop bc
	djnz moveblobs2
	ret

moveblobs3:
	ld a,d
	add a,b
	ld d,a
	cp BUFFERWIDTH
	jr c,moveblobs4
	; went from 0 to a neg number
	; or to the right over the border
	ld a,b
	neg
	ld b,a
	ld a,d
	add a,b
	add a,b
	ld d,a
moveblobs4:	
	; now the y
	ld a,e
	add a,c
	ld e,a
	cp BUFFERHEIGHT ; , that one is bigger then 2*screen
	jr c,moveblobs5
	; went from 0 to neg or over the max y
	ld a,c
	neg
	ld c,a
	ld a,e
	add a,c
	add a,c
	ld e,a
moveblobs5	;save the values again
	ld (hl),d
	inc hl
	ld (hl),e
	inc hl
	ld (hl),b
	inc hl
	ld (hl),c
	ret
	; }}}

;chartovram:	; {{{ create a char with the bits building up 3x2 pixel blocks
;	; so that we have a char pattern of
;	; 777666xx
;	; 777666xx
;	; 555444xx
;	; 555444xx
;	; 333222xx
;	; 333222xx
;	; 111000xx
;	; 111000xx
;	; each bit in A turns on the respective pixels
;	ld c,a
;	call chartovramdef ; bit 7 & 6
;	out (#98),a
;	out (#98),a
;	rl c
;	rl c
;	ld a,c
;	call chartovramdef ; bit 5 & 4
;	out (#98),a
;	out (#98),a
;	rl c
;	rl c
;	ld a,c
;	call chartovramdef ; bit 3 & 2
;	out (#98),a
;	out (#98),a
;	rl c
;	rl c
;	ld a,c
;	call chartovramdef ; bit 1 & 0
;	out (#98),a
;	out (#98),a
;	ret
;chartovramdef:	; {{{ use bit 7&6 to determine which pattern to push into the charpattern
;	; IN: A
;	; OUT: A
;	; CHANGES: AF
;	rlca
;	jr nc,chartovramdef4
;	; high pixel set
;	rlca
;	jr nc,chartovramdef2
;	ld a,#fa
;	ret
;chartovramdef2:	ld a,#e0
;	ret
;	; high pixel not set
;chartovramdef4: rlca
;	jr c,chartovramdef6
;	xor a
;	ret
;chartovramdef6:	ld a,#1c
;	ret
;	;}}}
;	; }}}

cliptorect:	; {{{ from center of circle (d=64) determine box to fill
	; we clip against a box of (0,0)-(BUFFERWIDTH,BUFFERHEIGHT)
	; IN: D=x center, E=y center
	; OUT: clipdx,clipdy,clipsx,clipsy,clipdw,clipdh
	; CHANGES: AF,DE,HL,BC
	ld a,d
	sub 32
	jr nc,cliptorect1
	; We are in the left border so we need to clip
	ld c,a
	neg
	ld (clipsx),a
	ld a,64
	add a,c
	ld (clipdw),a
	xor a
	ld (clipdx),a
	jr cliptorect3
cliptorect1:	; We are not touching the left border
	ld (clipdx),a
	; maybe we are touching the right border ?
	add a,64 ; no need to check for >255 since x always <= BUFFERWIDTH
	sub BUFFERWIDTH
	jr c,cliptorect2
	; we are in the right border 
	neg
	add a,64
	jr cliptorect21
cliptorect2:	; we are not in the right border
	ld a,64
cliptorect21:
	ld (clipdw),a
	xor a
	ld (clipsx),a
cliptorect3:	; now check the y coordinates

	; same logic as checking the x-axis
	ld a,e
	sub 32
	jr nc,cliptorect4
	; We are in the upper border so we need to clip
	ld c,a
	neg
	ld (clipsy),a
	ld a,64
	add a,c
	ld (clipdh),a
	xor a
	ld (clipdy),a
	ret
cliptorect4:	; We are not touching the upper border
	ld (clipdy),a
	; maybe we are touching the lower border ?
	add a,64 ; no need to check for >255 since x always <= BUFFERHEIGHT
	sub BUFFERHEIGHT
	jr c,cliptorect5
	; we are in the bottom border 
	neg
	add a,64
	jr cliptorect51
cliptorect5:	; we are not in the bottom border
	ld a,64
cliptorect51:
	ld (clipdh),a
	xor a
	ld (clipsy),a
	ret


	; }}}

clipdx 	db 0	; the destination x of the box
clipdy	db 0 	; the destination y of the box
clipdw	db 0	; the width of the box
clipdh	db 0	; the width of the destination of the box
clipsx	db 0	; the source x in the origin box around the center
clipsy 	db 0	; the source y in the origin box around the center

scrollcolchar:	; {{{
	ld a,(scrollcolcharcnt)
	dec a
	jp nz,scrollcolchar2
	; get next char
	ld hl,(scrollcolchartxtpnt)
	ld a,(hl)
	inc hl
	or a
	jp nz,scrollcolchar1
	ld hl,scrolltxt
	ld a,(hl)
	inc hl
scrollcolchar1:
	ld (scrollcolchartxtpnt),hl
	cp ' '
	jp nz,scrollcolchar11
scrollcolchar10:
	ld hl,bigfont_space
	ld a,8
	jp scrollcolchar19
scrollcolchar11: cp '9'+1
	jp nc,scrollcolchar12
	sub '0'
	jp scrollcolchar18
scrollcolchar12: cp 'Z'+1
	jp nc,scrollcolchar13
	sub 'A'-10
	jp scrollcolchar18
scrollcolchar13: cp 'z'+1
	jp nc,scrollcolchar10
	sub 'a'-26-10
scrollcolchar18:
	ld l,a
	add a,a
	add a,l
	ld l,a
	ld h,0
	ld de,bigfontdata
	add hl,de
	ld e,(hl)
	inc hl
	ld d,(hl)
	inc hl
	ld a,(hl)
	ex de,hl
scrollcolchar19:
	ld (scrollcolpointer),hl
scrollcolchar2:
	ld (scrollcolcharcnt),a
	;jp scrollcolcolumn
	;}}}
scrollcolcolumn: ; {{{
	ld hl,(scrollcolpointer)
	ld a,(hl)
	inc hl
	ld e,(hl)
	inc hl
	ld d,(hl)
	inc hl
	ld (scrollcolpointer),hl
	ld hl,#8000-1
	call scrollcolcolumn2
	ld a,e
	call scrollcolcolumn2
	ld a,d
scrollcolcolumn2:
	call scrollcolcolumn3
	call scrollcolcolumn3
	call scrollcolcolumn3
scrollcolcolumn3:
	add a,a
	rl (hl) ; 1
	dec hl
	rl (hl) ; 2
	dec hl
	rl (hl) ; 3
	dec hl
	rl (hl) ; 4
	dec hl
	rl (hl) ; 5
	dec hl
	rl (hl) ; 6
	dec hl
	rl (hl) ; 7
	dec hl
	rl (hl) ; 8
	dec hl
	rl (hl) ; 9
	dec hl
	rl (hl) ; 10
	dec hl
	add a,a
	rl (hl) ; 1
	dec hl
	rl (hl) ; 2
	dec hl
	rl (hl) ; 3
	dec hl
	rl (hl) ; 4
	dec hl
	rl (hl) ; 5
	dec hl
	rl (hl) ; 6
	dec hl
	rl (hl) ; 7
	dec hl
	rl (hl) ; 8
	dec hl
	rl (hl) ; 9
	dec hl
	rl (hl) ; 10
	dec hl
	ret
	; }}}
scrollcolpointer: dw bigfont_0
scrollcolcharcnt:	db 1
scrollcolchartxtpnt:	dw scrolltxt
scrolltxt:	db "  MSX2 screen 0 demo  ",0


fontdata ; {{{
 ;  0
 db %01110000
 db %10001000
 db %10011000
 db %10101000
 db %11001000
 db %10001000
 db %01110000
 db %00000000

 ;  1
 db %00100000
 db %01100000
 db %10100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  2
 db %01110000
 db %10001000
 db %00001000
 db %00010000
 db %01100000
 db %10000000
 db %11111000
 db %00000000

 ;  3
 db %11110000
 db %00001000
 db %00001000
 db %00110000
 db %00001000
 db %00001000
 db %11110000
 db %00000000

 ;  4
 db %00010000
 db %00110000
 db %01010000
 db %10010000
 db %11111000
 db %00010000
 db %00010000
 db %00000000

 ;  5
 db %11111000
 db %10000000
 db %11110000
 db %00001000
 db %00001000
 db %00001000
 db %11110000
 db %00000000

 ;  6
 db %00110000
 db %01000000
 db %10000000
 db %11110000
 db %10001000
 db %10001000
 db %01110000
 db %00000000

 ;  7
 db %11111000
 db %00001000
 db %00010000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  8
 db %01110000
 db %10001000
 db %10001000
 db %01110000
 db %10001000
 db %10001000
 db %01110000
 db %00000000

 ;  9
 db %01110000
 db %10001000
 db %10001000
 db %01111000
 db %00001000
 db %00010000
 db %01100000
 db %00000000

 ;  A
 db %00100000
 db %01010000
 db %10001000
 db %10001000
 db %11111000
 db %10001000
 db %10001000
 db %00000000

 ;  B
 db %11110000
 db %01001000
 db %01001000
 db %01110000
 db %01001000
 db %01001000
 db %11110000
 db %00000000

 ;  C
 db %00110000
 db %01001000
 db %10000000
 db %10000000
 db %10000000
 db %01001000
 db %00110000
 db %00000000

 ;  D
 db %11100000
 db %10010000
 db %10001000
 db %10001000
 db %10001000
 db %10010000
 db %11100000
 db %00000000

 ;  E
 db %11111000
 db %10000000
 db %10000000
 db %11111000
 db %10000000
 db %10000000
 db %11111000
 db %00000000

 ;  F
 db %11111000
 db %10000000
 db %10000000
 db %11110000
 db %10000000
 db %10000000
 db %10000000
 db %00000000

 ;  G
 db %01110000
 db %10001000
 db %10000000
 db %10011000
 db %10001000
 db %10001000
 db %01110000
 db %00000000

 ;  H
 db %10001000
 db %10001000
 db %10001000
 db %11111000
 db %10001000
 db %10001000
 db %10001000
 db %00000000

 ;  I
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  J
 db %00010000
 db %00010000
 db %00010000
 db %00010000
 db %10010000
 db %10010000
 db %01100000
 db %00000000

 ;  K
 db %10001000
 db %10010000
 db %10100000
 db %11000000
 db %10100000
 db %10010000
 db %10001000
 db %00000000

 ;  L
 db %10000000
 db %10000000
 db %10000000
 db %10000000
 db %10000000
 db %10000000
 db %11111000
 db %00000000

 ;  M
 db %10001000
 db %11011000
 db %10101000
 db %10101000
 db %10001000
 db %10001000
 db %10001000
 db %00000000

 ;  N
 db %10001000
 db %11001000
 db %11001000
 db %10101000
 db %10011000
 db %10011000
 db %10001000
 db %00000000

 ;  O
 db %01110000
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %01110000
 db %00000000

 ;  P
 db %11110000
 db %10001000
 db %10001000
 db %11110000
 db %10000000
 db %10000000
 db %10000000
 db %00000000

 ;  Q
 db %01110000
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %10010000
 db %01101000
 db %00000000

 ;  R
 db %11110000
 db %10001000
 db %10001000
 db %11110000
 db %10010000
 db %10001000
 db %10001000
 db %00000000

 ;  S
 db %01111000
 db %10000000
 db %10000000
 db %01110000
 db %00001000
 db %00001000
 db %11110000
 db %00000000

 ;  T
 db %11111000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  U
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %01110000
 db %00000000

 ;  V
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %01010000
 db %01010000
 db %00100000
 db %00000000

 ;  W
 db %10001000
 db %10001000
 db %10001000
 db %10101000
 db %10101000
 db %11011000
 db %10001000
 db %00000000

 ;  X
 db %10001000
 db %10001000
 db %01010000
 db %00100000
 db %01010000
 db %10001000
 db %10001000
 db %00000000

 ;  Y
 db %10001000
 db %10001000
 db %10001000
 db %01110000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  Z
 db %11111000
 db %00001000
 db %00010000
 db %00100000
 db %01000000
 db %10000000
 db %11111000
 db %00000000

 ;  a
 db %00000000
 db %00000000
 db %01110000
 db %00001000
 db %01111000
 db %10001000
 db %01111000
 db %00000000

 ;  b
 db %10000000
 db %10000000
 db %11110000
 db %10001000
 db %10001000
 db %10001000
 db %11110000
 db %00000000

 ;  c
 db %00000000
 db %00000000
 db %01111000
 db %10000000
 db %10000000
 db %10000000
 db %01111000
 db %00000000

 ;  d
 db %00001000
 db %00001000
 db %01111000
 db %10001000
 db %10001000
 db %10001000
 db %01111000
 db %00000000

 ;  e
 db %00000000
 db %00000000
 db %01110000
 db %10001000
 db %11111000
 db %10000000
 db %01110000
 db %00000000

 ;  f
 db %00011000
 db %00100000
 db %00100000
 db %11111000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  g
 db %00000000
 db %00000000
 db %01110000
 db %10001000
 db %10001000
 db %01111000
 db %00001000
 db %11110000

 ;  h
 db %10000000
 db %10000000
 db %11110000
 db %10001000
 db %10001000
 db %10001000
 db %10001000
 db %00000000

 ;  i
 db %00000000
 db %00100000
 db %00000000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  j
 db %00000000
 db %00010000
 db %00000000
 db %00010000
 db %00010000
 db %00010000
 db %10010000
 db %01100000

 ;  k
 db %01000000
 db %01000000
 db %01001000
 db %01010000
 db %01100000
 db %01010000
 db %01001000
 db %00000000

 ;  l
 db %01100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00100000
 db %00000000

 ;  m
 db %00000000
 db %00000000
 db %11010000
 db %10101000
 db %10101000
 db %10101000
 db %10101000
 db %00000000

 ;  n
 db %00000000
 db %00000000
 db %10110000
 db %11001000
 db %10001000
 db %10001000
 db %10001000
 db %00000000

 ;  o
 db %00000000
 db %00000000
 db %01110000
 db %10001000
 db %10001000
 db %10001000
 db %01110000
 db %00000000

 ;  p
 db %00000000
 db %00000000
 db %11110000
 db %10001000
 db %10001000
 db %11110000
 db %10000000
 db %10000000

 ;  q
 db %00000000
 db %00000000
 db %01111000
 db %10001000
 db %10001000
 db %01111000
 db %00001000
 db %00001000

 ;  r
 db %00000000
 db %00000000
 db %10111000
 db %11000000
 db %10000000
 db %10000000
 db %10000000
 db %00000000

 ;  s
 db %00000000
 db %00000000
 db %01111000
 db %10000000
 db %11110000
 db %00001000
 db %11110000
 db %00000000

 ;  t
 db %01000000
 db %01000000
 db %01111000
 db %01000000
 db %01000000
 db %01000000
 db %00111000
 db %00000000

 ;  u
 db %00000000
 db %00000000
 db %10010000
 db %10010000
 db %10010000
 db %10010000
 db %01100000
 db %00000000

 ;  v
 db %00000000
 db %00000000
 db %10001000
 db %10001000
 db %10001000
 db %01010000
 db %00100000
 db %00000000

 ;  w
 db %00000000
 db %00000000
 db %10001000
 db %10101000
 db %10101000
 db %10101000
 db %01010000
 db %00000000

 ;  x
 db %00000000
 db %00000000
 db %10001000
 db %01010000
 db %00100000
 db %01010000
 db %10001000
 db %00000000

 ;  y
 db %00000000
 db %00000000
 db %10001000
 db %10001000
 db %10001000
 db %01111000
 db %00001000
 db %01110000

 ;  z
 db %00000000
 db %00000000
 db %11111000
 db %00010000
 db %00100000
 db %01000000
 db %11111000
 db %00000000

 ; }}}
fontdataend:

blobinfo:	db 4 ; now testing so not all 6 ; nr of blobs
;	db 12,15,0,1 ; x,y,speedx,speedy
;	db 23,4,1,0 ; x,y,speedx,speedy
	db 54,14,-1,1 ; x,y,speedx,speedy
	db 60,15,-1,-1 ; x,y,speedx,speedy
	db 12,5,1,1 ; x,y,speedx,speedy
	db 35,4,1,-1 ; x,y,speedx,speedy


	if DEBUG2
blobinfobest:
	db 79,47,0,0 ; x,y,speedx,speedy
	db 0,47,0,0 ; x,y,speedx,speedy
	db 0,0,0,0 ; x,y,speedx,speedy
	db 79,0,0,0 ; x,y,speedx,speedy
blobinfoworst:
	db 40,24,0,0 ; x,y,speedx,speedy
	db 40,24,0,0 ; x,y,speedx,speedy
	db 40,24,0,0 ; x,y,speedx,speedy
	db 40,24,0,0 ; x,y,speedx,speedy
	endif

blobsource
	; {{{
blobdata0: db  26 , 11   , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 
blobdata1: db  22 , 19   , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 , 1 
blobdata2: db  19 , 25   , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 2 , 2 , 2 , 2 , 1 , 1 , 1 
blobdata3: db  17 , 29   , 1 , 1 , 1 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 3 , 3 , 3 , 3 , 2 , 2 , 1 , 1 , 1 
blobdata4: db  15 , 33   , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 2 , 1 , 1 
blobdata5: db  14 , 35   , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 1 , 1 
blobdata6: db  13 , 37   , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 2 , 1 
blobdata7: db  11 , 41   , 1 , 1 , 2 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 2 , 1 , 1 
blobdata8: db  10 , 43   , 1 , 1 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata9: db  9 , 45   , 1 , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata10: db  8 , 47   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata11: db  7 , 49   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata12: db  7 , 49   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata13: db  6 , 51   , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 
blobdata14: db  5 , 53   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata15: db  4 , 55   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 14 , 14 , 14 , 14 , 14 , 14 , 14 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata16: db  4 , 55   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 12 , 12 , 14 , 14 , 14 , 16 , 16 , 16 , 16 , 16 , 16 , 16 , 14 , 14 , 14 , 12 , 12 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata17: db  3 , 57   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 14 , 16 , 16 , 16 , 17 , 17 , 17 , 17 , 17 , 17 , 17 , 16 , 16 , 16 , 14 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata18: db  3 , 57   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 16 , 17 , 17 , 17 , 19 , 19 , 19 , 19 , 19 , 19 , 19 , 17 , 17 , 17 , 16 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata19: db  2 , 59   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 16 , 17 , 19 , 19 , 19 , 21 , 21 , 21 , 21 , 21 , 21 , 21 , 19 , 19 , 19 , 17 , 16 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata20: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 17 , 17 , 19 , 19 , 21 , 21 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 21 , 21 , 19 , 19 , 17 , 17 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata21: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 23 , 24 , 24 , 24 , 24 , 24 , 24 , 24 , 23 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata22: db  1 , 61   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 24 , 24 , 24 , 26 , 26 , 26 , 26 , 26 , 24 , 24 , 24 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata23: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 16 , 17 , 19 , 21 , 23 , 23 , 24 , 24 , 26 , 26 , 27 , 27 , 27 , 27 , 27 , 26 , 26 , 24 , 24 , 23 , 23 , 21 , 19 , 17 , 16 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata24: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 21 , 23 , 24 , 26 , 26 , 27 , 27 , 28 , 28 , 28 , 28 , 28 , 27 , 27 , 26 , 26 , 24 , 23 , 21 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata25: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 19 , 21 , 23 , 24 , 26 , 26 , 27 , 28 , 28 , 29 , 29 , 29 , 29 , 29 , 28 , 28 , 27 , 26 , 26 , 24 , 23 , 21 , 19 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata26: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 30 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata27: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata28: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata29: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata30: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata31: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata32: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata33: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata34: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata35: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 29 , 30 , 31 , 31 , 31 , 31 , 31 , 31 , 31 , 30 , 29 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata36: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 31 , 31 , 31 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata37: db  0 , 63   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 23 , 24 , 24 , 26 , 27 , 28 , 28 , 29 , 30 , 30 , 30 , 30 , 30 , 29 , 28 , 28 , 27 , 26 , 24 , 24 , 23 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata38: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 17 , 19 , 19 , 21 , 23 , 24 , 26 , 26 , 27 , 28 , 28 , 29 , 29 , 29 , 29 , 29 , 28 , 28 , 27 , 26 , 26 , 24 , 23 , 21 , 19 , 19 , 17 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata39: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 19 , 21 , 21 , 23 , 24 , 26 , 26 , 27 , 27 , 28 , 28 , 28 , 28 , 28 , 27 , 27 , 26 , 26 , 24 , 23 , 21 , 21 , 19 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata40: db  1 , 61   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 14 , 16 , 16 , 17 , 19 , 21 , 23 , 23 , 24 , 24 , 26 , 26 , 27 , 27 , 27 , 27 , 27 , 26 , 26 , 24 , 24 , 23 , 23 , 21 , 19 , 17 , 16 , 16 , 14 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata41: db  1 , 61   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 11 , 11 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 24 , 24 , 24 , 26 , 26 , 26 , 26 , 26 , 24 , 24 , 24 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 11 , 11 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata42: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 17 , 17 , 19 , 21 , 21 , 23 , 23 , 24 , 24 , 24 , 24 , 24 , 24 , 24 , 23 , 23 , 21 , 21 , 19 , 17 , 17 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata43: db  2 , 59   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 17 , 17 , 19 , 19 , 21 , 21 , 23 , 23 , 23 , 23 , 23 , 23 , 23 , 21 , 21 , 19 , 19 , 17 , 17 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata44: db  2 , 59   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 14 , 14 , 16 , 16 , 17 , 19 , 19 , 19 , 21 , 21 , 21 , 21 , 21 , 21 , 21 , 19 , 19 , 19 , 17 , 16 , 16 , 14 , 14 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata45: db  3 , 57   , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 16 , 16 , 17 , 17 , 17 , 19 , 19 , 19 , 19 , 19 , 19 , 19 , 17 , 17 , 17 , 16 , 16 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 
blobdata46: db  3 , 57   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 12 , 12 , 14 , 14 , 16 , 16 , 16 , 17 , 17 , 17 , 17 , 17 , 17 , 17 , 16 , 16 , 16 , 14 , 14 , 12 , 12 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata47: db  4 , 55   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 12 , 12 , 14 , 14 , 14 , 16 , 16 , 16 , 16 , 16 , 16 , 16 , 14 , 14 , 14 , 12 , 12 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata48: db  4 , 55   , 1 , 1 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 14 , 14 , 14 , 14 , 14 , 14 , 14 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 1 , 1 
blobdata49: db  5 , 53   , 1 , 2 , 2 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 2 , 2 , 1 
blobdata50: db  6 , 51   , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 
blobdata51: db  7 , 49   , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 
blobdata52: db  7 , 49   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata53: db  8 , 47   , 1 , 1 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 9 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 1 , 1 
blobdata54: db  9 , 45   , 1 , 1 , 2 , 3 , 3 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata55: db  10 , 43   , 1 , 1 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 8 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 1 , 1 
blobdata56: db  11 , 41   , 1 , 1 , 2 , 2 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 2 , 2 , 1 , 1 
blobdata57: db  13 , 37   , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 3 , 3 , 2 , 2 , 1 
blobdata58: db  14 , 35   , 1 , 1 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 1 , 1 
blobdata59: db  15 , 33   , 1 , 1 , 2 , 2 , 2 , 3 , 3 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 4 , 4 , 4 , 4 , 3 , 3 , 2 , 2 , 2 , 1 , 1 
blobdata60: db  17 , 29   , 1 , 1 , 1 , 2 , 2 , 3 , 3 , 3 , 3 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 3 , 3 , 3 , 3 , 2 , 2 , 1 , 1 , 1 
blobdata61: db  19 , 25   , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 3 , 2 , 2 , 2 , 2 , 1 , 1 , 1 
blobdata62: db  22 , 19   , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 1 , 1 , 1 , 1 
blobdata63: db  26 , 11   , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 
 ; }}}
blobsourceend

firetext:	dw #9700
	db firetext2-firetext1
firetext1
	db 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145
	db 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127
	db 128,128, 196,194,195,198,193,207,230,251,238,233,193,211,234,247,234,242,230,243,248 ,128,128
	db 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144
	db 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155
firetext2
	dw 0
cptext:
	dw #AE3B  ; x= 59 , y= 46 
	db  19   ; '2014 David Heremans'
	db   196,194,195,198,193,207,230,251,238,233,193,211,234,247,234,242,230,243,248
	dw #AF3B  ; x= 59 , y= 47 
	db  19   ; '2014 David Heremans'
	db   196,194,195,198,193,207,230,251,238,233,193,211,234,247,234,242,230,243,248
	dw 0


bigfontdata ; {{{
	dw bigfont_0
	db (bigfont_0_end - bigfont_0)/3
	dw bigfont_1
	db (bigfont_1_end - bigfont_1)/3
	dw bigfont_2
	db (bigfont_2_end - bigfont_2)/3
	dw bigfont_3
	db (bigfont_3_end - bigfont_3)/3
	dw bigfont_4
	db (bigfont_4_end - bigfont_4)/3
	dw bigfont_5
	db (bigfont_5_end - bigfont_5)/3
	dw bigfont_6
	db (bigfont_6_end - bigfont_6)/3
	dw bigfont_7
	db (bigfont_7_end - bigfont_7)/3
	dw bigfont_8
	db (bigfont_8_end - bigfont_8)/3
	dw bigfont_9
	db (bigfont_9_end - bigfont_9)/3
	dw bigfont_A
	db (bigfont_A_end - bigfont_A)/3
	dw bigfont_B
	db (bigfont_B_end - bigfont_B)/3
	dw bigfont_C
	db (bigfont_C_end - bigfont_C)/3
	dw bigfont_D
	db (bigfont_D_end - bigfont_D)/3
	dw bigfont_E
	db (bigfont_E_end - bigfont_E)/3
	dw bigfont_F
	db (bigfont_F_end - bigfont_F)/3
	dw bigfont_G
	db (bigfont_G_end - bigfont_G)/3
	dw bigfont_H
	db (bigfont_H_end - bigfont_H)/3
	dw bigfont_I
	db (bigfont_I_end - bigfont_I)/3
	dw bigfont_J
	db (bigfont_J_end - bigfont_J)/3
	dw bigfont_K
	db (bigfont_K_end - bigfont_K)/3
	dw bigfont_L
	db (bigfont_L_end - bigfont_L)/3
	dw bigfont_M
	db (bigfont_M_end - bigfont_M)/3
	dw bigfont_N
	db (bigfont_N_end - bigfont_N)/3
	dw bigfont_O
	db (bigfont_O_end - bigfont_O)/3
	dw bigfont_P
	db (bigfont_P_end - bigfont_P)/3
	dw bigfont_Q
	db (bigfont_Q_end - bigfont_Q)/3
	dw bigfont_R
	db (bigfont_R_end - bigfont_R)/3
	dw bigfont_S
	db (bigfont_S_end - bigfont_S)/3
	dw bigfont_T
	db (bigfont_T_end - bigfont_T)/3
	dw bigfont_U
	db (bigfont_U_end - bigfont_U)/3
	dw bigfont_V
	db (bigfont_V_end - bigfont_V)/3
	dw bigfont_W
	db (bigfont_W_end - bigfont_W)/3
	dw bigfont_X
	db (bigfont_X_end - bigfont_X)/3
	dw bigfont_Y
	db (bigfont_Y_end - bigfont_Y)/3
	dw bigfont_Z
	db (bigfont_Z_end - bigfont_Z)/3

	dw bigfont_a_s
	db (bigfont_a_end_s - bigfont_a_s)/3
	dw bigfont_b_s
	db (bigfont_b_end_s - bigfont_b_s)/3
	dw bigfont_c_s
	db (bigfont_c_end_s - bigfont_c_s)/3
	dw bigfont_d_s
	db (bigfont_d_end_s - bigfont_d_s)/3
	dw bigfont_e_s
	db (bigfont_e_end_s - bigfont_e_s)/3
	dw bigfont_f_s
	db (bigfont_f_end_s - bigfont_f_s)/3
	dw bigfont_g_s
	db (bigfont_g_end_s - bigfont_g_s)/3
	dw bigfont_h_s
	db (bigfont_h_end_s - bigfont_h_s)/3
	dw bigfont_i_s
	db (bigfont_i_end_s - bigfont_i_s)/3
	dw bigfont_j_s
	db (bigfont_j_end_s - bigfont_j_s)/3
	dw bigfont_k_s
	db (bigfont_k_end_s - bigfont_k_s)/3
	dw bigfont_l_s
	db (bigfont_l_end_s - bigfont_l_s)/3
	dw bigfont_m_s
	db (bigfont_m_end_s - bigfont_m_s)/3
	dw bigfont_n_s
	db (bigfont_n_end_s - bigfont_n_s)/3
	dw bigfont_o_s
	db (bigfont_o_end_s - bigfont_o_s)/3
	dw bigfont_p_s
	db (bigfont_p_end_s - bigfont_p_s)/3
	dw bigfont_q_s
	db (bigfont_q_end_s - bigfont_q_s)/3
	dw bigfont_r_s
	db (bigfont_r_end_s - bigfont_r_s)/3
	dw bigfont_s_s
	db (bigfont_s_end_s - bigfont_s_s)/3
	dw bigfont_t_s
	db (bigfont_t_end_s - bigfont_t_s)/3
	dw bigfont_u_s
	db (bigfont_u_end_s - bigfont_u_s)/3
	dw bigfont_v_s
	db (bigfont_v_end_s - bigfont_v_s)/3
	dw bigfont_w_s
	db (bigfont_w_end_s - bigfont_w_s)/3
	dw bigfont_x_s
	db (bigfont_x_end_s - bigfont_x_s)/3
	dw bigfont_y_s
	db (bigfont_y_end_s - bigfont_y_s)/3
	dw bigfont_z_s
	db (bigfont_z_end_s - bigfont_z_s)/3
; 0
bigfont_0
  db %00000011,%11111111,%11111000
  db %00000111,%11111111,%11111100
  db %00001111,%11111111,%11111110
  db %00011110,%11110000,%00001111
  db %00011100,%01110000,%00000111
  db %00011100,%01111000,%00000111
  db %00011100,%00011110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001111,%00000111
  db %00011100,%00000011,%11000111
  db %00011100,%00000001,%11000111
  db %00011110,%00000001,%11101111
  db %00001111,%11111111,%11111110
  db %00000111,%11111111,%11111100
  db %00000011,%11111111,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_0_end
; 1
bigfont_1
  db %00000000,%00000001,%11100000
  db %00000000,%00000001,%11110000
  db %00000000,%00000000,%11111000
  db %00000000,%00000000,%01111100
  db %00000000,%00000000,%00111110
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_1_end
; 2
bigfont_2
  db %00011111,%10000000,%00111000
  db %00011111,%11000000,%00111100
  db %00011111,%11100000,%00111110
  db %00011100,%11110000,%00001111
  db %00011100,%01110000,%00000111
  db %00011100,%01111000,%00000111
  db %00011100,%01111100,%00000111
  db %00011100,%00111110,%00000111
  db %00011100,%00011111,%00000111
  db %00011100,%00001111,%10001111
  db %00011100,%00000111,%11111110
  db %00011100,%00000011,%11111100
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_2_end
; 3
bigfont_3
  db %00000011,%10000000,%00111000
  db %00000111,%10000000,%00111100
  db %00001111,%10000000,%00111110
  db %00011110,%00000000,%00001111
  db %00011100,%00000000,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00011111,%00001111
  db %00001111,%11111011,%11111110
  db %00000111,%11110001,%11111100
  db %00000011,%11110001,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_3_end
; 4
bigfont_4
  db %00000000,%01111110,%00000000
  db %00000000,%01111111,%00000000
  db %00000000,%01111111,%10000000
  db %00000000,%01110011,%11000000
  db %00000000,%01110001,%11100000
  db %00000000,%01110000,%11110000
  db %00000000,%01110000,%01111000
  db %00000000,%01110000,%00111100
  db %00000000,%01110000,%00111110
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%01110000,%00000000
  db %00000000,%01110000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_4_end
; 5
bigfont_5
  db %00011100,%00000001,%11111111
  db %00011100,%00000001,%11111111
  db %00011100,%00000001,%11111111
  db %00011100,%00000001,%11000111
  db %00011100,%00000001,%11000111
  db %00011100,%00000001,%11000111
  db %00011110,%00000011,%10000111
  db %00011111,%00000111,%10000111
  db %00001111,%10001111,%00000111
  db %00000111,%10001111,%00000111
  db %00000011,%11011110,%00000111
  db %00000001,%11111100,%00000111
  db %00000000,%11111000,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_5_end
; 6
bigfont_6
  db %00000011,%11111111,%11000000
  db %00000111,%11111111,%11100000
  db %00001111,%11111111,%11110000
  db %00011110,%00011110,%01111000
  db %00011100,%00001110,%00111100
  db %00011100,%00001110,%00111110
  db %00011100,%00001110,%00011111
  db %00011100,%00001110,%00001111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011110,%00011110,%00000111
  db %00001111,%11111100,%00000000
  db %00000111,%11111000,%00000000
  db %00000011,%11110000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_6_end
; 7
bigfont_7
  db %00000000,%00000000,%00001111
  db %00000000,%00000000,%00001111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00011111,%11111110,%00000111
  db %00011111,%11111111,%00000111
  db %00011111,%11111111,%10000111
  db %00000000,%00000111,%11000111
  db %00000000,%00000011,%11000111
  db %00000000,%00000001,%11000111
  db %00000000,%00000000,%11111111
  db %00000000,%00000000,%01111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_7_end
; 8
bigfont_8
  db %00000011,%11100000,%11111000
  db %00000111,%11110001,%11111100
  db %00001111,%11111011,%11111110
  db %00011110,%00011111,%00001111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011110,%00011111,%00001111
  db %00001111,%11111011,%11111110
  db %00000111,%11110001,%11111100
  db %00000011,%11100000,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_8_end
; 9
bigfont_9
  db %00000000,%00000001,%11111000
  db %00000000,%00000011,%11111100
  db %00000000,%00000111,%11111110
  db %00011100,%00001111,%00001111
  db %00011100,%00001110,%00000111
  db %00011110,%00001110,%00000111
  db %00011110,%00001110,%00000111
  db %00001111,%00001110,%00000111
  db %00000111,%10001110,%00000111
  db %00000011,%10001111,%00001111
  db %00000001,%11111111,%11111110
  db %00000000,%11111111,%11111100
  db %00000000,%01111111,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_9_end
; A
bigfont_A
  db %00011111,%11111111,%10000000
  db %00011111,%11111111,%11100000
  db %00011111,%11111111,%11110000
  db %00000000,%01110000,%01111000
  db %00000000,%01110000,%00111100
  db %00000000,%01110000,%00011110
  db %00000000,%01110000,%00001111
  db %00000000,%01110000,%00000111
  db %00000000,%01110000,%00001111
  db %00000000,%01110000,%00011110
  db %00000000,%01110000,%00111100
  db %00000000,%01110000,%01111000
  db %00011111,%11111111,%11110000
  db %00011111,%11111111,%11100000
  db %00011111,%11111111,%10000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_A_end
; B
bigfont_B
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00011111,%00001111
  db %00001111,%11111011,%11111110
  db %00000111,%11110001,%11111100
  db %00000011,%11100000,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_B_end
; C
bigfont_C
  db %00000000,%00111111,%10000000
  db %00000000,%11111111,%11100000
  db %00000001,%11111111,%11110000
  db %00000011,%11000000,%01111000
  db %00000111,%10000000,%00111100
  db %00001111,%00000000,%00011110
  db %00011110,%00000000,%00001111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_C_end
; D
bigfont_D
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011110,%00000000,%00001111
  db %00011111,%00000000,%00011111
  db %00001111,%10000000,%00111110
  db %00000111,%11000000,%01111100
  db %00000001,%11111111,%11111000
  db %00000000,%11111111,%11100000
  db %00000000,%01111111,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_D_end
; E
bigfont_E
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_E_end
; F
bigfont_F
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_F_end
; G
bigfont_G
  db %00000011,%11111111,%11111000
  db %00000111,%11111111,%11111100
  db %00001111,%11111111,%11111110
  db %00011110,%00000000,%00001111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011110,%00001110,%00001111
  db %00001111,%11111110,%00111110
  db %00000111,%11111110,%00111100
  db %00000011,%11111110,%00111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_G_end
; H
bigfont_H
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_H_end
; I
bigfont_I
  db %00011100,%00000000,%00000111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011100,%00000000,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_I_end
; J
bigfont_J
  db %00001111,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000111
  db %00011111,%11111111,%11111111
  db %00001111,%11111111,%11111111
  db %00000111,%11111111,%11111111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_J_end
; K
bigfont_K
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00011111,%00000000
  db %00000000,%00111111,%10000000
  db %00000000,%01111011,%11000000
  db %00000000,%11110001,%11100000
  db %00000001,%11110001,%11110000
  db %00000011,%11100000,%11111000
  db %00000111,%11000000,%01111100
  db %00001111,%10000000,%00111110
  db %00011110,%00000000,%00001111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_K_end
; L
bigfont_L
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_L_end
; M
bigfont_M
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00111110
  db %00000000,%00000000,%01111100
  db %00000000,%00000000,%11111000
  db %00000000,%00001111,%11110000
  db %00000000,%00011111,%11100000
  db %00000000,%00001111,%11110000
  db %00000000,%00000000,%11111000
  db %00000000,%00000000,%01111100
  db %00000000,%00000000,%00111110
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_M_end
; N
bigfont_N
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000001,%11111100
  db %00000000,%00000011,%11111000
  db %00000000,%00000111,%11110000
  db %00000000,%00001111,%11100000
  db %00000000,%00011111,%11000000
  db %00000000,%00111111,%10000000
  db %00000000,%01111111,%00000000
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_N_end
; O
bigfont_O
  db %00000011,%11111111,%11111000
  db %00000111,%11111111,%11111100
  db %00001111,%11111111,%11111110
  db %00011110,%00000000,%00001111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011110,%00000000,%00001111
  db %00001111,%11111111,%11111110
  db %00000111,%11111111,%11111100
  db %00000011,%11111111,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_O_end
; P
bigfont_P
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00000111
  db %00000000,%00001111,%00001111
  db %00000000,%00000111,%11111110
  db %00000000,%00000011,%11111100
  db %00000000,%00000001,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_P_end
; Q
bigfont_Q
  db %00000011,%11111111,%11111000
  db %00000111,%11111111,%11111100
  db %00001111,%11111111,%11111110
  db %00011110,%00000000,%00001111
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011100,%00110000,%00000111
  db %00011100,%01110000,%00000111
  db %00011000,%11110000,%00000111
  db %00000011,%11000000,%00000111
  db %00000111,%10000000,%00000111
  db %00001111,%10000000,%00001111
  db %00011111,%00111111,%11111110
  db %00011110,%01111111,%11111100
  db %00011100,%01111111,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_Q_end
; R
bigfont_R
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00111110,%00000111
  db %00000000,%01111110,%00000111
  db %00000000,%11111110,%00000111
  db %00000001,%11111110,%00000111
  db %00000011,%11101110,%00000111
  db %00000111,%11001110,%00000111
  db %00001111,%10001111,%00001111
  db %00011111,%00000111,%11111110
  db %00011110,%00000011,%11111100
  db %00011100,%00000001,%11111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_R_end
; S
bigfont_S
  db %00000011,%10000001,%11111000
  db %00000111,%10000011,%11111100
  db %00001111,%10000111,%11111110
  db %00011110,%00001111,%00001111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011100,%00001110,%00000111
  db %00011110,%00011110,%00001111
  db %00001111,%11111100,%00111110
  db %00000111,%11111000,%00111100
  db %00000011,%11110000,%00111000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_S_end
; T
bigfont_T
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_T_end
; U
bigfont_U
  db %00000011,%11111111,%11111111
  db %00000111,%11111111,%11111111
  db %00001111,%11111111,%11111111
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00001111,%11111111,%11111111
  db %00000111,%11111111,%11111111
  db %00000011,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_U_end
; V
bigfont_V
  db %00000000,%00111111,%11111111
  db %00000000,%01111111,%11111111
  db %00000011,%11111100,%00000000
  db %00000111,%11110000,%00000000
  db %00001111,%11100000,%00000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00001111,%11100000,%00000000
  db %00000111,%11110000,%00000000
  db %00000011,%11111100,%00000000
  db %00000000,%01111111,%11111111
  db %00000000,%00111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_V_end
; W
bigfont_W
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00001111,%10000000,%00000000
  db %00000111,%11000000,%00000000
  db %00000011,%11110000,%00000000
  db %00000000,%11111110,%00000000
  db %00000000,%01111111,%00000000
  db %00000000,%11111110,%00000000
  db %00000011,%11110000,%00000000
  db %00000111,%11000000,%00000000
  db %00001111,%10000000,%00000000
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_W_end
; X
bigfont_X
  db %00011111,%10000000,%00111111
  db %00011111,%11000000,%01111111
  db %00011111,%11100000,%11111111
  db %00000001,%11110001,%11110000
  db %00000000,%11110001,%11100000
  db %00000000,%01111011,%11000000
  db %00000000,%00011111,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00011111,%00000000
  db %00000000,%01111011,%11000000
  db %00000000,%11110001,%11100000
  db %00000001,%11110001,%11110000
  db %00011111,%11100000,%11111111
  db %00011111,%11000000,%01111111
  db %00011111,%10000000,%00111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_X_end
; Y
bigfont_Y
  db %00000000,%00000111,%11111111
  db %00000000,%00001111,%11111111
  db %00000000,%00011111,%00000000
  db %00000000,%00111110,%00000000
  db %00011111,%11111110,%00000000
  db %00011111,%11111110,%00000000
  db %00011111,%11111110,%00000000
  db %00000000,%00111110,%00000000
  db %00000000,%00011111,%00000000
  db %00000000,%00001111,%11111111
  db %00000000,%00000111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_Y_end
; Z
bigfont_Z
  db %00011111,%11000000,%00000111
  db %00011111,%11100000,%00000111
  db %00011101,%11110000,%00000111
  db %00011100,%11111000,%00000111
  db %00011100,%01111100,%00000111
  db %00011100,%00111110,%00000111
  db %00011100,%00011111,%00000111
  db %00011100,%00001111,%10000111
  db %00011100,%00000111,%11000111
  db %00011100,%00000011,%11100111
  db %00011100,%00000001,%11110111
  db %00011100,%00000000,%11111111
  db %00011100,%00000000,%01111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_Z_end
; a
bigfont_a_s
  db %00000011,%10000000,%00000000
  db %00000111,%11000000,%00000000
  db %00001111,%11100000,%00000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011111,%11111111,%10000000
  db %00011111,%11111111,%00000000
  db %00011111,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_a_end_s
; b
bigfont_b_s
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000011,%11011110,%00000000
  db %00000111,%10001111,%00000000
  db %00001111,%00000111,%10000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011110,%00000011,%11000000
  db %00001111,%11111111,%10000000
  db %00000111,%11111111,%00000000
  db %00000011,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_b_end_s
; c
bigfont_c_s
  db %00000111,%11111111,%00000000
  db %00001111,%11111111,%10000000
  db %00011110,%00000011,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011110,%00000011,%11000000
  db %00001111,%00000111,%10000000
  db %00000111,%00000111,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_c_end_s
; d
bigfont_d_s
  db %00000111,%11111111,%00000000
  db %00001111,%11111111,%10000000
  db %00011110,%00000011,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011110,%00000011,%11000000
  db %00001111,%00000111,%10000000
  db %00000111,%10001111,%00000000
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_d_end_s
; e
bigfont_e_s
  db %00000111,%11111111,%00000000
  db %00001111,%11111111,%10000000
  db %00011110,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110011,%11000000
  db %00000000,%01111111,%10000000
  db %00000000,%01111111,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_e_end_s
; f
bigfont_f_s
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00000000,%00001110,%00000000
  db %00011111,%11111111,%11111000
  db %00011111,%11111111,%11111100
  db %00011111,%11111111,%11111110
  db %00000000,%00001110,%00001111
  db %00000000,%00001110,%00000111
  db %00000000,%00001110,%00001111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_f_end_s
; g
bigfont_g_s
  db %00000000,%11111111,%00000000
  db %00000001,%11111111,%10000000
  db %11100011,%11000011,%11000000
  db %11100011,%10000001,%11000000
  db %11100011,%10000001,%11000000
  db %11100011,%10000001,%11000000
  db %11100011,%10000001,%11000000
  db %11100001,%11111111,%10000000
  db %11100000,%11111111,%00000000
  db %11110000,%01111110,%00000000
  db %01111111,%11111111,%11000000
  db %00111111,%11111111,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_g_end_s
; h
bigfont_h_s
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%00000001,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000011,%11000000
  db %00011111,%11111111,%10000000
  db %00011111,%11111111,%00000000
  db %00011111,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_h_end_s
; i
bigfont_i_s
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011111,%11111111,%11000111
  db %00011111,%11111111,%11000111
  db %00011111,%11111111,%11000111
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_i_end_s
; j
bigfont_j_s
  db %00111100,%00000000,%00000000
  db %01111100,%00000000,%00000000
  db %11110000,%00000000,%00000000
  db %11100000,%00000000,%00000000
  db %11100000,%00000000,%00000000
  db %11110000,%00000001,%11000000
  db %01111111,%11111111,%11000111
  db %00111111,%11111111,%11000111
  db %00011111,%11111111,%11000111
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_j_end_s
; k
bigfont_k_s
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00000000,%11111000,%00000000
  db %00000001,%11111100,%00000000
  db %00000011,%11011110,%00000000
  db %00000111,%10001111,%00000000
  db %00001111,%10001111,%10000000
  db %00011111,%00000111,%11000000
  db %00011110,%00000011,%11000000
  db %00011100,%00000001,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_k_end_s
; l
bigfont_l_s
  db %00011100,%00000000,%00000111
  db %00011100,%00000000,%00000111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011111,%11111111,%11111111
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_l_end_s
; m
bigfont_m_s
  db %00011111,%11111111,%11000000
  db %00011111,%11111111,%11000000
  db %00011111,%11111111,%11000000
  db %00000000,%00000011,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000011,%11000000
  db %00011111,%11111111,%10000000
  db %00011111,%11111111,%00000000
  db %00011111,%11111111,%10000000
  db %00000000,%00000011,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000011,%11000000
  db %00011111,%11111111,%10000000
  db %00011111,%11111111,%00000000
  db %00011111,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_m_end_s
; n
bigfont_n_s
  db %00011111,%11111111,%11000000
  db %00011111,%11111111,%11000000
  db %00011111,%11111111,%11000000
  db %00000000,%00011111,%00000000
  db %00000000,%00000111,%10000000
  db %00000000,%00000011,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000011,%11000000
  db %00000000,%00000111,%11000000
  db %00011111,%11111111,%10000000
  db %00011111,%11111111,%00000000
  db %00011111,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_n_end_s
; o
bigfont_o_s
  db %00000011,%11111110,%00000000
  db %00000111,%11111111,%00000000
  db %00001111,%11111111,%10000000
  db %00011110,%00000011,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011110,%00000011,%11000000
  db %00001111,%11111111,%10000000
  db %00000111,%11111111,%00000000
  db %00000011,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_o_end_s
; p
bigfont_p_s
  db %11111111,%11111111,%11000000
  db %11111111,%11111111,%11000000
  db %11111111,%11111111,%11000000
  db %00000001,%11111111,%10000000
  db %00000011,%11000011,%11000000
  db %00000011,%10000001,%11000000
  db %00000011,%10000001,%11000000
  db %00000011,%10000001,%11000000
  db %00000011,%11000011,%11000000
  db %00000001,%11111111,%10000000
  db %00000000,%11111111,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_p_end_s
; q
bigfont_q_s
  db %00000011,%10000000,%00000000
  db %00000011,%10000000,%00000000
  db %00000011,%10000000,%00000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011111,%11111110,%00000000
  db %00011111,%11111110,%00000000
  db %00011111,%11111110,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_q_end_s
; r
bigfont_r_s
  db %00011111,%11111111,%11000000
  db %00011111,%11111111,%11000000
  db %00011111,%11111111,%11000000
  db %00000000,%00011111,%00000000
  db %00000000,%00001111,%10000000
  db %00000000,%00000011,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000001,%11000000
  db %00000000,%00000011,%11000000
  db %00000000,%00000111,%11000000
  db %00000000,%00001111,%10000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_r_end_s
; s
bigfont_s_s
  db %00011100,%00111110,%00000000
  db %00011100,%01111111,%00000000
  db %00011100,%01111111,%10000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011100,%01110001,%11000000
  db %00011110,%01110001,%11000000
  db %00001111,%11100001,%11000000
  db %00000111,%11000001,%11000000
  db %00000011,%10000001,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_s_end_s
; t
bigfont_t_s
  db %00000000,%00000001,%11000000
  db %00000000,%00000001,%11000000
  db %00000011,%11111111,%11111111
  db %00000111,%11111111,%11111111
  db %00001111,%11111111,%11111111
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000001,%11000000
  db %00011100,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_t_end_s
; u
bigfont_u_s
  db %00000011,%11111111,%11000000
  db %00000111,%11111111,%11000000
  db %00001111,%11111111,%11000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00001111,%11111111,%11000000
  db %00000011,%11111111,%11000000
  db %00001111,%11111111,%11000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_u_end_s
; v
bigfont_v_s
  db %00000000,%11111111,%11000000
  db %00000001,%11111111,%11000000
  db %00000011,%11110000,%00000000
  db %00001111,%10000000,%00000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00001111,%10000000,%00000000
  db %00000011,%11110000,%00000000
  db %00000001,%11111111,%11000000
  db %00000000,%11111111,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_v_end_s
; w
bigfont_w_s
  db %00000011,%11111111,%11000000
  db %00000111,%11111111,%11000000
  db %00001111,%11111111,%11000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00001111,%11111110,%00000000
  db %00000011,%11111110,%00000000
  db %00001111,%11111110,%00000000
  db %00011110,%00000000,%00000000
  db %00011100,%00000000,%00000000
  db %00011110,%00000000,%00000000
  db %00001111,%11111111,%11000000
  db %00000111,%11111111,%11000000
  db %00000011,%11111111,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_w_end_s
; x
bigfont_x_s
  db %00011100,%00000001,%11000000
  db %00011110,%00000011,%11000000
  db %00000111,%10001111,%00000000
  db %00000011,%11011110,%00000000
  db %00000000,%11111000,%00000000
  db %00000000,%01110000,%00000000
  db %00000000,%11111000,%00000000
  db %00000011,%11011110,%00000000
  db %00000111,%10001111,%00000000
  db %00011110,%00000011,%11000000
  db %00011100,%00000001,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_x_end_s
; y
bigfont_y_s
  db %00000000,%01111111,%11000000
  db %00000000,%11111111,%11000000
  db %11100001,%11000000,%00000000
  db %11100011,%10000000,%00000000
  db %11100011,%10000000,%00000000
  db %11100011,%10000000,%00000000
  db %11100001,%11000000,%00000000
  db %11100000,%11110000,%00000000
  db %11110000,%01110000,%00000000
  db %01111111,%11111111,%11000000
  db %00111111,%11111111,%11000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_y_end_s
; z
bigfont_z_s
  db %00011110,%00000001,%11000000
  db %00011111,%00000001,%11000000
  db %00011111,%10000001,%11000000
  db %00011111,%11000001,%11000000
  db %00011101,%11100001,%11000000
  db %00011100,%11110001,%11000000
  db %00011100,%01111001,%11000000
  db %00011100,%00111101,%11000000
  db %00011100,%00011111,%11000000
  db %00011100,%00001111,%11000000
  db %00011100,%00000111,%11000000
  db %00011100,%00000011,%11000000
  db %00000000,%00000000,%00000000
bigfont_space
  db %00000000,%00000000,%00000000
  db %00000000,%00000000,%00000000
bigfont_z_end_s
  ds 3*6	; overlap bigfont_space with final2 empty cols
 ; }}}


	ds ((($/256)+1)*256)-$
blobdatapointers:
	dw blobdata0,blobdata1,blobdata2,blobdata3
	dw blobdata4,blobdata5,blobdata6,blobdata7
	dw blobdata8,blobdata9,blobdata10,blobdata11
	dw blobdata12,blobdata13,blobdata14,blobdata15
	dw blobdata16,blobdata17,blobdata18,blobdata19
	dw blobdata20,blobdata21,blobdata22,blobdata23
	dw blobdata24,blobdata25,blobdata26,blobdata27
	dw blobdata28,blobdata29,blobdata30,blobdata31
	dw blobdata32,blobdata33,blobdata34,blobdata35
	dw blobdata36,blobdata37,blobdata38,blobdata39
	dw blobdata40,blobdata41,blobdata42,blobdata43
	dw blobdata44,blobdata45,blobdata46,blobdata47
	dw blobdata48,blobdata49,blobdata50,blobdata51
	dw blobdata52,blobdata53,blobdata54,blobdata55
	dw blobdata56,blobdata57,blobdata58,blobdata59
	dw blobdata60,blobdata61,blobdata62,blobdata63

buffer ds 64*64	; used for floyd steinbergh 
chardef ds 8
einde	equ $

;	vim:foldmethod=marker:ft=z8a:ts=16
